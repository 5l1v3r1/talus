#!/usr/bin/env python
# encoding: utf-8

import os
import pipes
import shlex
import sys
import textwrap

# realpath so this script can be symlinked and it'll still work
sys.path.insert(0, os.path.join(os.path.dirname(os.path.realpath(__file__)), ".."))

from talus.cmds import TalusCmd, ENABLED_COMMANDS

if __name__ == "__main__":
	if len(sys.argv) < 2:
		sys.argv.append("help")
	
	host = "http://localhost:8001"
	if sys.argv[1] in ["--host"]:
		host = sys.argv[2]
		del sys.argv[1]
		del sys.argv[1]
	
	if len(sys.argv) == 1:
		sys.argv.append("--help")
		print(sys.argv)
	
	if sys.argv[1] in ["--help", "-h", "-help", "-?", "help"]:
		# the user is trying to do some form of ./talus help <subcmd>
		if len(sys.argv) > 2:
			cmder = TalusCmd("placeholder", one_shot=True)
			cmder.onecmd("help " + " ".join(sys.argv[2:]))
			exit()

		else:
			cmd_helps = ""
			for cmd_class in ENABLED_COMMANDS:
				cmd_helps += cmd_class.get_help(abbrev=True)

		print("""
{this_name} TALUS_URL [-h HOST_URL] <cmd-name> <cmd-args>

--host   the url of the talus host (http://localhost:8001 default)

Available commands:
{cmd_helps}""".format(
			this_name=sys.argv[0],
			cmd_helps=cmd_helps
		))
		exit()

	one_shot = len(sys.argv) > 1
	cmder = TalusCmd(host, one_shot=one_shot)

	# run a single command
	if one_shot:
		cmder.onecmd(" ".join(pipes.quote(x) for x in sys.argv[1:]))
	
	# drop into the shell
	else:
		cmder.cmdloop()
		pass
